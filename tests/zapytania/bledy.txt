while w; stmt s;
Select w such that Follows*(s, w)
10 => exception => c++ zwraca 10
while w; stmt s;
Select w such that Follows*(w, s)
10,18,23 => exception => c++ zwraca 10, 18, 23
assign a;
Select a such that Modifies(a, "a") and Uses(a, "a")
26 => moje zwraca 2, 13, 14, 26 => c++ zwraca 26
assign a;
Select a such that Modifies(a, "d") and Uses(a, "d")
11 => moje zwraca 22, 11, 3, 25 => c++ zwraca 11
assign a;
Select a such that Modifies(a, "b") and Uses(a, "b")
none => moje zwraca 5, 7 => c++ zwraca none
assign a;
Select a such that Modifies(a, "c") and Uses(a, "c")
16,21 => moje zwraca 12, 27, 16, 21 => c++ zwraca 16, 21
while w; assign a;
Select a such that Modifies(a, "t") and Parent(w, a)
19 => moje zwraca 1, 28, 19 => c++ zwraca 19
while w, assign a;
Select a such that Parent(w, a) and Modifies(a, "t")
19 => zwraca none => c++ zwraca none
while w; assign a;
Select a such that Modifies(a, "t") such that Parent(w, a)
19 => moje zwraca 1, 28, 19 => c++ zwraca 19
procedure p;
Select p such that Calls("Circle", p) and Modifies(p, "c") and Uses(p, "a")
Rectangle,Triangle => moje zwraca Hexagon, Triangle, Rectangle => c++ zwraca Rectangle, Triangle
procedure p;
Select p such that Calls*("Circle", p) and Modifies(p, "c")
Rectangle,Triangle => moje zwraca Hexagon, Triangle, Rectangle => c++ zwraca Rectangle, Triangle
assign a;
Select a pattern a("d", _)
11,22,25,3 => StringIndexOutOfBoundsException => c++ zwraca 11, 22, 25, 3
while w; assign a;
Select a pattern a("a", _) such that Follows(w, a)
13 => moje zwraca NoSuchElementException => c++ zwraca 13
if ifstat; constant co;
Select BOOLEAN pattern ifstat("t", _,_) with co.value = 2
true => moje zwraca StringIndexOutOfBoundsException => c++ zwraca false
prog_line n2;
Select BOOLEAN such that Next*(12, 12)
false => moje zwraca true => c++ zwraca true

